import{j as e}from"./jsx-runtime-CkxqCPlQ.js";import{useMDXComponents as n}from"./index-BrnU7xv7.js";import{ae as i}from"./index-DryY4Ina.js";import"./index-DJO9vBfz.js";import"./iframe-DulR_S7U.js";import"../sb-preview/runtime.js";import"./index-DLC2J04D.js";import"./index-D-8MO0q_.js";import"./index-0wbOH00J.js";import"./index-DrFu-skq.js";function r(t){const s={h2:"h2",h3:"h3",hr:"hr",p:"p",strong:"strong",...n(),...t.components};return e.jsxs(e.Fragment,{children:[e.jsx(i,{title:"geometry/Points"}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"0rem"},children:[e.jsx("span",{className:"declaration-text",children:"class"}),e.jsx(s.h2,{id:"points",children:"Points"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/geometry-Points-source--docs#19",children:"geometry/Points.ts(ln: 19)"})]}),e.jsx(s.p,{children:"A Vector generator is a reusable generator method."}),e.jsx(s.p,{children:"Geometries and react components require reusable Generators."}),e.jsx(s.p,{children:`This allows for measuring and rerendinging appropriately.
Points uses generator methods to append actions to an iteration reducing the number of times a vertex list needs to be iterated.`}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"property"}),e.jsx(s.h3,{id:"generator",children:"generator"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/geometry-Points-source--docs#27",children:"geometry/Points.ts(ln: 27)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": ",e.jsx("a",{href:"/?path=/docs/geometry-types--docs#VertexGenerator",children:"VertexGenerator"})]}),e.jsx(s.p,{children:`The generator property is a reusable Generator which at time of render will iterate and produce the desired points.
As the Points are mutated this method will be updated chaining the mutations.`}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"property"}),e.jsx(s.h3,{id:"center",children:"center"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/geometry-Points-source--docs#28",children:"geometry/Points.ts(ln: 28)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": ",e.jsx("a",{href:"/?path=/docs/geometry-Point--docs#Point",children:"Point"})]}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"property"}),e.jsx(s.h3,{id:"noclose",children:"noClose"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/geometry-Points-source--docs#33",children:"geometry/Points.ts(ln: 33)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": ",e.jsx("span",{className:"declaration-text",children:"boolean"})]}),e.jsx(s.p,{children:"By default Shapes generated by the Points class are closed using z. However in some uses cases (such as animating the stroke) a path may not be closed"}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"get"}),e.jsx(s.h3,{id:"viewbox",children:"viewBox"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/geometry-Points-source--docs#58",children:"geometry/Points.ts(ln: 58)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": ",e.jsx("span",{className:"declaration-text",children:"string"})]}),e.jsx(s.p,{children:"The view box generates an svg view box based on the indices of the path. It is recommended normalized paths are used. especially in Grid components (This allows the path units to be clipPathUnits for clipping of each cell)"}),e.jsx(s.p,{children:"Calling this property will trigger an iteration of points if the shape has not been measured since its last Mutation. That being said subsequent calls will not trigger additional iterations through the points."}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"get"}),e.jsx(s.h3,{id:"aspectratio",children:"aspectRatio"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/geometry-Points-source--docs#69",children:"geometry/Points.ts(ln: 69)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": ",e.jsx("span",{className:"declaration-text",children:"string"})]}),e.jsx(s.p,{children:`Because the SVG needs to occupy all of the space without applying its own scaling preserveAspectRatio is typically set to none. As such the parent element of the SVG is responsible for maintaining the aspect ratio.
If you are using Geometric, Polymetric or SVG references and manually representing a shape this property is a convenient way to get the css aspect ratio`}),e.jsx(s.p,{children:"Calling this property will trigger an iteration of points if the shape has not been measured since its last Mutation. That being said subsequent calls will not trigger additional iterations through the points."}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"get"}),e.jsx(s.h3,{id:"viewinfo",children:"viewInfo"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/geometry-Points-source--docs#80",children:"geometry/Points.ts(ln: 80)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": [",e.jsx("span",{className:"declaration-text",children:"string"}),", ",e.jsx("span",{className:"declaration-text",children:"string"}),"]"]}),e.jsx(s.p,{children:"Returns a tuple of the aspectRatio and View box."}),e.jsx(s.p,{children:"Calling this property will trigger an iteration of points if the shape has not been measured since its last Mutation. That being said subsequent calls will not trigger additional iterations through the points."}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"get"}),e.jsx(s.h3,{id:"bounds",children:"bounds"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/geometry-Points-source--docs#92",children:"geometry/Points.ts(ln: 92)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": ",e.jsx("a",{href:"/?path=/docs/geometry-types--docs#Rect",children:"Rect"})]}),e.jsx(s.p,{children:"Returns the size of the shape."}),e.jsx(s.p,{children:"Calling this property will trigger an iteration of points if the shape has not been measured since its last Mutation. That being said subsequent calls will not trigger additional iterations through the points."}),e.jsxs(s.p,{children:["If you want to force a method to update its bounds use the ",e.jsx(s.strong,{children:"measure()"})," method."]}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"method"}),e.jsx(s.h3,{id:"translate",children:"translate"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/geometry-Points-source--docs#102",children:"geometry/Points.ts(ln: 102)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": (point: ",e.jsx("a",{href:"/?path=/docs/geometry-Point--docs#Point",children:"Point"}),")=>",e.jsx("a",{href:"/?path=/docs/geometry-Points--docs#Points",children:"Points"})]}),e.jsx(s.p,{children:"Translate all points by a new position. This is effectively adding the new point to the center."}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"method"}),e.jsx(s.h3,{id:"rotate",children:"rotate"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/geometry-Points-source--docs#112",children:"geometry/Points.ts(ln: 112)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": (angle: ",e.jsx("span",{className:"declaration-text",children:"number"}),")=>",e.jsx("a",{href:"/?path=/docs/geometry-Points--docs#Points",children:"Points"})]}),e.jsx(s.p,{children:"Rotates the points around a point by a specified radian"}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"method"}),e.jsx(s.h3,{id:"scale",children:"scale"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/geometry-Points-source--docs#121",children:"geometry/Points.ts(ln: 121)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": (scaleFactor: ",e.jsx("a",{href:"/?path=/docs/geometry-Point--docs#Point",children:"Point"}),")=>",e.jsx("a",{href:"/?path=/docs/geometry-Points--docs#Points",children:"Points"})]}),e.jsx(s.p,{children:"Scales the point by two a scale Factor Point"}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"method"}),e.jsx(s.h3,{id:"normalize",children:"normalize"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/geometry-Points-source--docs#140",children:"geometry/Points.ts(ln: 140)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": (bounds: ",e.jsx("a",{href:"/?path=/docs/geometry-types--docs#Rect",children:"Rect"}),")=>",e.jsx("a",{href:"/?path=/docs/geometry-Points--docs#Points",children:"Points"})]}),e.jsx(s.p,{children:"Converts the geometry to a series of points that exists between 0-1 where 0 is the smallest value in both the height and width. and 1 being the the largest value. This causes the geometry to no longer have a valid aspect ratio."}),e.jsx(s.p,{children:"If you wish to preserve the original aspect ratio prior to this mutation it is recommended you cache the aspect Ratio prior to normalizing"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"example:"}),`
take the triangle described by points 0,0, 1,1, -1,1.
This triangle is 2x1 in size
once normalized it will be described as 0.5, 0, 1, 1, 0,0
Its bounds being 1x1. however using objectBoundingUnits these values can applied to non square components. (kinda like percentages)
For this shape to be displayed properly the shape needs to be in a component with the appropriate aspect ratio.`]}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"method"}),e.jsx(s.h3,{id:"round",children:"round"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/geometry-Points-source--docs#153",children:"geometry/Points.ts(ln: 153)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": (cornerRadius: ",e.jsx("span",{className:"declaration-text",children:"number"})," | ",e.jsx("span",{className:"declaration-text",children:"Array"}),"<",e.jsx("span",{className:"declaration-text",children:"number"}),">)=>",e.jsx("a",{href:"/?path=/docs/geometry-Points--docs#Points",children:"Points"})]}),e.jsx(s.p,{children:"Rounds each corner. This effectively multiplies the number of points by three. A side effect of this is the point order will be shifted forward by two."}),e.jsx(s.p,{children:"The corner radius value can be a static number or an array of values. If an array is provided and there is not a value for a point then the corner radius will be assumed to be 0."}),e.jsx(s.p,{children:"If you are rounding and unrounding points the shift of point order will be imporatnt to keep in mind if providing corner radius for each corner."}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"method"}),e.jsx(s.h3,{id:"scalebyscalar",children:"scaleByScalar"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/geometry-Points-source--docs#162",children:"geometry/Points.ts(ln: 162)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": (scalar: ",e.jsx("span",{className:"declaration-text",children:"number"}),")=>",e.jsx("a",{href:"/?path=/docs/geometry-Points--docs#Points",children:"Points"})]}),e.jsx(s.p,{children:"Scale by a single scale factor"}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"method"}),e.jsx(s.h3,{id:"measure",children:"measure"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/geometry-Points-source--docs#174",children:"geometry/Points.ts(ln: 174)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": ()=>",e.jsx("a",{href:"/?path=/docs/geometry-types--docs#Rect",children:"Rect"})]}),e.jsx(s.p,{children:"Measure the current generator"}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"method"}),e.jsx(s.h3,{id:"precision",children:"precision"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/geometry-Points-source--docs#189",children:"geometry/Points.ts(ln: 189)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": (prec: ",e.jsx("span",{className:"declaration-text",children:"number"}),")=>",e.jsx("a",{href:"/?path=/docs/geometry-Points--docs#Points",children:"Points"})]}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"method"}),e.jsx(s.h3,{id:"invalidatedimensions",children:"invalidateDimensions"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/geometry-Points-source--docs#196",children:"geometry/Points.ts(ln: 196)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": ()=>",e.jsx("a",{href:"/?path=/docs/geometry-Points--docs#Points",children:"Points"})]}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"method"}),e.jsx(s.h3,{id:"applygenerator",children:"applyGenerator"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/geometry-Points-source--docs#202",children:"geometry/Points.ts(ln: 202)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": (gen: ",e.jsx("a",{href:"/?path=/docs/geometry-types--docs#VertexGenerator",children:"VertexGenerator"}),")=>",e.jsx("a",{href:"/?path=/docs/geometry-Points--docs#Points",children:"Points"})]}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"method"}),e.jsx(s.h3,{id:"shouldclose",children:"shouldClose"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/geometry-Points-source--docs#207",children:"geometry/Points.ts(ln: 207)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": (close: ",e.jsx("span",{className:"declaration-text",children:"boolean"}),")=>",e.jsx("a",{href:"/?path=/docs/geometry-Points--docs#Points",children:"Points"})]}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"method"}),e.jsx(s.h3,{id:"toarray",children:"toArray"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/geometry-Points-source--docs#215",children:"geometry/Points.ts(ln: 215)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": ()=>",e.jsx("span",{className:"declaration-text",children:"Array"}),"<",e.jsx("a",{href:"/?path=/docs/geometry-Point--docs#Point",children:"Point"})," | ",e.jsx("a",{href:"/?path=/docs/geometry-RoundedCorner--docs#RoundedCorner",children:"RoundedCorner"}),">"]}),e.jsx(s.p,{children:"Converts the shape to an array of points or Rounded Corners."}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"method"}),e.jsx(s.h3,{id:"tostring",children:"toString"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/geometry-Points-source--docs#226",children:"geometry/Points.ts(ln: 226)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": ()=>",e.jsx("span",{className:"declaration-text",children:"string"})]}),e.jsx(s.p,{children:"Representing points as a string will result in the path commands being generated."}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"static method"}),e.jsx(s.h3,{id:"fromcircle",children:"fromCircle"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/geometry-Points-source--docs#243",children:"geometry/Points.ts(ln: 243)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": (stops: ",e.jsx("span",{className:"declaration-text",children:"number"}),", rotation: ",e.jsx("span",{className:"declaration-text",children:"number"}),", center: ",e.jsx("a",{href:"/?path=/docs/geometry-Point--docs#Point",children:"Point"}),")=>",e.jsx("a",{href:"/?path=/docs/geometry-Points--docs#Points",children:"Points"})]}),e.jsx(s.p,{children:"Generates points by picking points around a circle."}),e.jsx(s.hr,{})]})]})}function g(t={}){const{wrapper:s}={...n(),...t.components};return s?e.jsx(s,{...t,children:e.jsx(r,{...t})}):r(t)}export{g as default};
