import{j as a}from"./jsx-runtime-CkxqCPlQ.js";import{S as I,c as D,b as C,G as q,a as R}from"./Points-D1gxx6HH.js";var i=[];for(var c=0;c<256;++c)i.push((c+256).toString(16).slice(1));function A(e,n=0){return(i[e[n+0]]+i[e[n+1]]+i[e[n+2]]+i[e[n+3]]+"-"+i[e[n+4]]+i[e[n+5]]+"-"+i[e[n+6]]+i[e[n+7]]+"-"+i[e[n+8]]+i[e[n+9]]+"-"+i[e[n+10]]+i[e[n+11]]+i[e[n+12]]+i[e[n+13]]+i[e[n+14]]+i[e[n+15]]).toLowerCase()}var r,B=new Uint8Array(16);function N(){if(!r&&(r=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!r))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return r(B)}var P=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);const _={randomUUID:P};function E(e,n,y){if(_.randomUUID&&!n&&!e)return _.randomUUID();e=e||{};var t=e.random||(e.rng||N)();return t[6]=t[6]&15|64,t[8]=t[8]&63|128,A(t)}const m=({geometry:e,className:n,style:y={},shadow:t,src:d,objectBounding:l,clipped:s,defs:f,viewBox:h,fill:v,stroke:b,strokeWidth:g,components:{reference:w,definition:x,clipPath:V}={},...S})=>{var U;const p=Array.isArray(e),u=E(),G=d||(e?"#"+u:void 0);return e||d?a.jsx(I,{className:D(n,"shapely-geometry"),viewBox:l?"0 0 1 1":h||(((U=p?e[0]:e)==null?void 0:U.viewBox)??"-0.5 -0.5 1 1"),style:{...C(t),...y},defs:e?a.jsxs(a.Fragment,{children:[f,p?e.map((j,o)=>a.jsx(q,{geometry:j,id:u+"-"+o,clipped:s,components:{clipPath:V},objectBounding:l,...x},o)):a.jsx(q,{geometry:e,id:u,clipped:s,components:{clipPath:V},objectBounding:l,...x})]}):f,...S,children:p?e.map((j,o)=>a.jsx(R,{fill:v,stroke:b,strokeWidth:g,src:G+"-"+o,clipped:s,...w},o)):a.jsx(R,{fill:v,stroke:b,strokeWidth:g,src:G,clipped:s,...w})}):void 0},F=m;try{m.displayName="Geometric",m.__docgenInfo={description:"Geometry renders a Set of Points into an svg drawing lines to each point with the ability to round the points.",displayName:"Geometric",props:{aspectRatio:{defaultValue:null,description:"If a pathId is provided this property should also be applied",name:"aspectRatio",required:!1,type:{name:"string | undefined"}},viewBox:{defaultValue:null,description:"viewBox is an exising SVG Property however because it is passed as a base property later it seems we need to include it explicitly",name:"viewBox",required:!1,type:{name:"string | undefined"}},geometry:{defaultValue:null,description:"Multiple geometries can be rendered in a Geometric but only the first will be reference to define the viewbox. A custom viewbox can be provided.",name:"geometry",required:!1,type:{name:"Points | Points[] | undefined"}},shadow:{defaultValue:null,description:"",name:"shadow",required:!1,type:{name:"string | undefined"}},objectBounding:{defaultValue:null,description:"If object bounding is pass through the all geometries will be normalized. This is benefitial if using the same path to clip an html element.",name:"objectBounding",required:!1,type:{name:"boolean | undefined"}},src:{defaultValue:null,description:"Unlike href src is required and will populate both href as well as clip path",name:"src",required:!1,type:{name:"string | undefined"}},clipped:{defaultValue:null,description:"Clipping a shape is not always necessary. but if you are using a clipped definition this can be provided to the ref to instruct it to populate the clip path using shapelys clipping convention.",name:"clipped",required:!1,type:{name:"boolean | undefined"}},defs:{defaultValue:null,description:"Simply an alias to an internal &lt;defs&gt;",name:"defs",required:!1,type:{name:"ReactNode"}},components:{defaultValue:null,description:"Components will be a record of prop overrides available.",name:"components",required:!1,type:{name:"GeometricComponents | undefined"}}}}}catch{}export{F as G,E as v};
