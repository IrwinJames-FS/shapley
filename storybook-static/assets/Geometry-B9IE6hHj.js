import{j as l}from"./jsx-runtime-CkxqCPlQ.js";import{G as q}from"./Geometric-sZ--qBRS.js";import{c as r,v as V}from"./Points-D1gxx6HH.js";const s=({as:o,aspectRatio:i,viewBox:a,className:d,geometry:e,children:p,pathId:c,style:{backgroundColor:u=void 0,borderColor:f=void 0,borderWidth:m=void 0,boxShadow:h=void 0,...b}={},pstyle:y={},components:{svg:{className:v="",...w}={},...x}={},...g})=>{const G=o||"div";let n=i,t=a;return(!i||!a&&e)&&(Array.isArray(e)?(n=i??e[0].aspectRatio,t=a??e[0].viewBox):(n=i??(e==null?void 0:e.aspectRatio),t=a??(e==null?void 0:e.viewBox))),l.jsxs(G,{className:r(d,"shapely-geometric"),style:{...V({aspectRatio:n}),...b},...g,children:[l.jsx(q,{geometry:e,src:c,fill:u,stroke:f,strokeWidth:m,shadow:h,className:r(v,"shapely-geometric-bg"),viewBox:t,components:x,...y,...w}),p]})},R=s;try{s.displayName="Geometry",s.__docgenInfo={description:"Geometric is a react component that uses a Points class to render a shape.",displayName:"Geometry",props:{as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType | undefined"}},aspectRatio:{defaultValue:null,description:"If a pathId is provided this property should also be applied",name:"aspectRatio",required:!1,type:{name:"string | undefined"}},viewBox:{defaultValue:null,description:"viewBox is an exising SVG Property however because it is passed as a base property later it seems we need to include it explicitly",name:"viewBox",required:!1,type:{name:"string | undefined"}},geometry:{defaultValue:null,description:"Multiple geometries can be rendered in a Geometric but only the first will be reference to define the viewbox. A custom viewbox can be provided.",name:"geometry",required:!1,type:{name:"Points | Points[] | undefined"}},shadow:{defaultValue:null,description:"",name:"shadow",required:!1,type:{name:"string | undefined"}},objectBounding:{defaultValue:null,description:"If object bounding is pass through the all geometries will be normalized. This is benefitial if using the same path to clip an html element.",name:"objectBounding",required:!1,type:{name:"boolean | undefined"}},src:{defaultValue:null,description:"Unlike href src is required and will populate both href as well as clip path",name:"src",required:!1,type:{name:"string | undefined"}},clipped:{defaultValue:null,description:"Clipping a shape is not always necessary. but if you are using a clipped definition this can be provided to the ref to instruct it to populate the clip path using shapelys clipping convention.",name:"clipped",required:!1,type:{name:"boolean | undefined"}},components:{defaultValue:null,description:"Components will be a record of prop overrides available.",name:"components",required:!1,type:{name:"GeometryComponents | undefined"}}}}}catch{}export{R as G};
