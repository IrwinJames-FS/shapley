import{j as e}from"./jsx-runtime-CkxqCPlQ.js";import{useMDXComponents as t}from"./index-BrnU7xv7.js";import{ae as c}from"./index-DryY4Ina.js";import"./index-DJO9vBfz.js";import"./iframe-DulR_S7U.js";import"../sb-preview/runtime.js";import"./index-DLC2J04D.js";import"./index-D-8MO0q_.js";import"./index-0wbOH00J.js";import"./index-DrFu-skq.js";function r(n){const s={h2:"h2",h3:"h3",hr:"hr",p:"p",strong:"strong",...t(),...n.components};return e.jsxs(e.Fragment,{children:[e.jsx(c,{title:"components/HexagonGrid/types"}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"0rem"},children:[e.jsx("span",{className:"declaration-text",children:"type"}),e.jsx(s.h2,{id:"hexagongridprops",children:"HexagonGridProps"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/components-HexagonGrid-types-source--docs#6",children:"components/HexagonGrid/types.ts(ln: 6)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": {...} & ",e.jsx("span",{className:"declaration-text",children:"Pick"}),"<",e.jsx("span",{className:"declaration-text",children:"Omit"}),"<",e.jsx("span",{className:"declaration-text",children:"SVGProps"}),"<",e.jsx("span",{className:"declaration-text",children:"SVGUseElement"}),">,",e.jsx("span",{className:"literal-text",children:'"ref"'}),">,",e.jsx("span",{className:"literal-text",children:'"fill"'})," | ",e.jsx("span",{className:"literal-text",children:'"stroke"'})," | ",e.jsx("span",{className:"literal-text",children:'"strokeWidth"'}),"> & {...}"]}),e.jsx(s.p,{children:"The Hexagon grid comes in two flavors which is dictated by the horizontal boolean."}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"property"}),e.jsx(s.h3,{id:"columns",children:"columns"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/components-HexagonGrid-types-source--docs#10",children:"components/HexagonGrid/types.ts(ln: 10)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": ",e.jsx("span",{className:"declaration-text",children:"number"})]}),e.jsx(s.p,{children:"The number of cells in each row"}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"property?"}),e.jsx(s.h3,{id:"geometry",children:"geometry"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/components-HexagonGrid-types-source--docs#15",children:"components/HexagonGrid/types.ts(ln: 15)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": ",e.jsx("span",{className:"declaration-text",children:"string"})]}),e.jsx(s.p,{children:"The id for a geometry if one is already cached"}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"property?"}),e.jsx(s.h3,{id:"cornerradius",children:"cornerRadius"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/components-HexagonGrid-types-source--docs#20",children:"components/HexagonGrid/types.ts(ln: 20)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": ",e.jsx("span",{className:"declaration-text",children:"number"})]}),e.jsx(s.p,{children:"The desired corner radius if a hexagon needs to be generated"}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"property?"}),e.jsx(s.h3,{id:"horizontal",children:"horizontal"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/components-HexagonGrid-types-source--docs#27",children:"components/HexagonGrid/types.ts(ln: 27)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": ",e.jsx("span",{className:"declaration-text",children:"boolean"})]}),e.jsx(s.p,{children:"Should the horizontal variation be used."}),e.jsx(s.p,{children:"If you are providing an id for a cached geometry you should update the geometry id to reflect a different hexagon (hint hint you only need to rotate a hexagon by 30 degrees to change what axis its represented on)"}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"property?"}),e.jsx(s.h3,{id:"gap",children:"gap"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/components-HexagonGrid-types-source--docs#32",children:"components/HexagonGrid/types.ts(ln: 32)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": ",e.jsx("span",{className:"declaration-text",children:"string"})," | ",e.jsx("span",{className:"declaration-text",children:"number"})," | [",e.jsx("a",{href:"/?path=/docs/components-types--docs#CSSNumeric",children:"CSSNumeric"}),"]"]}),e.jsx(s.p,{children:"The distance between each cell"}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"property?"}),e.jsx(s.h3,{id:"shadow",children:"shadow"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/components-types-source--docs#37",children:"components/types.ts(ln: 37)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": ",e.jsx("span",{className:"declaration-text",children:"string"})]}),e.jsx(s.hr,{})]})]})}function g(n={}){const{wrapper:s}={...t(),...n.components};return s?e.jsx(s,{...n,children:e.jsx(r,{...n})}):r(n)}export{g as default};
