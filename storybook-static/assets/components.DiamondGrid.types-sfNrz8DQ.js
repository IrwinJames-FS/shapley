import{j as e}from"./jsx-runtime-CkxqCPlQ.js";import{useMDXComponents as t}from"./index-BrnU7xv7.js";import{ae as c}from"./index-DryY4Ina.js";import"./index-DJO9vBfz.js";import"./iframe-DulR_S7U.js";import"../sb-preview/runtime.js";import"./index-DLC2J04D.js";import"./index-D-8MO0q_.js";import"./index-0wbOH00J.js";import"./index-DrFu-skq.js";function n(r){const s={h2:"h2",h3:"h3",hr:"hr",p:"p",strong:"strong",...t(),...r.components};return e.jsxs(e.Fragment,{children:[e.jsx(c,{title:"components/DiamondGrid/types"}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"0rem"},children:[e.jsx("span",{className:"declaration-text",children:"type"}),e.jsx(s.h2,{id:"diamondgridprops",children:"DiamondGridProps"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/components-DiamondGrid-types-source--docs#6",children:"components/DiamondGrid/types.ts(ln: 6)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": {...} & ",e.jsx("span",{className:"declaration-text",children:"Pick"}),"<",e.jsx("span",{className:"declaration-text",children:"Omit"}),"<",e.jsx("span",{className:"declaration-text",children:"SVGProps"}),"<",e.jsx("span",{className:"declaration-text",children:"SVGUseElement"}),">,",e.jsx("span",{className:"literal-text",children:'"ref"'}),">,",e.jsx("span",{className:"literal-text",children:'"fill"'})," | ",e.jsx("span",{className:"literal-text",children:'"stroke"'})," | ",e.jsx("span",{className:"literal-text",children:'"strokeWidth"'}),"> & {...}"]}),e.jsx(s.p,{children:"The Diamond Grid props explain to the component how it should layout each cell."}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"property"}),e.jsx(s.h3,{id:"columns",children:"columns"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/components-DiamondGrid-types-source--docs#10",children:"components/DiamondGrid/types.ts(ln: 10)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": ",e.jsx("span",{className:"declaration-text",children:"number"})]}),e.jsx(s.p,{children:"The number of columns in each row.."}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"property?"}),e.jsx(s.h3,{id:"geometry",children:"geometry"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/components-DiamondGrid-types-source--docs#14",children:"components/DiamondGrid/types.ts(ln: 14)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": ",e.jsx("span",{className:"declaration-text",children:"string"})]}),e.jsx(s.p,{children:"If you already have a Diamond Geometry you can provide its id here if not one will be generated for you. It is recommended that the geometry be objectBounding and normalized to work properly."}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"property?"}),e.jsx(s.h3,{id:"gap",children:"gap"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/components-DiamondGrid-types-source--docs#19",children:"components/DiamondGrid/types.ts(ln: 19)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": ",e.jsx("span",{className:"declaration-text",children:"string"})," | ",e.jsx("span",{className:"declaration-text",children:"number"})," | [",e.jsx("a",{href:"/?path=/docs/components-types--docs#CSSNumeric",children:"CSSNumeric"}),", ",e.jsx("a",{href:"/?path=/docs/components-types--docs#CSSNumeric",children:"CSSNumeric"}),"]"]}),e.jsx(s.p,{children:"The desired gap"}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"property?"}),e.jsx(s.h3,{id:"cornerradius",children:"cornerRadius"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/components-DiamondGrid-types-source--docs#24",children:"components/DiamondGrid/types.ts(ln: 24)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": ",e.jsx("span",{className:"declaration-text",children:"number"})," | ",e.jsx("span",{className:"declaration-text",children:"Array"}),"<",e.jsx("span",{className:"declaration-text",children:"number"}),">"]}),e.jsx(s.p,{children:"If you provide a geometry property this will be ignored however this provides the opportunity to add a corner radius to the grid. Typically geometries are described as values between 0-1 as such your corner radius should be < the shortest sides intersecting at the vertex."}),e.jsx(s.hr,{})]}),`
`,e.jsxs("div",{className:"doc-block",style:{marginLeft:"2rem"},children:[e.jsx("span",{className:"declaration-text",children:"property?"}),e.jsx(s.h3,{id:"shadow",children:"shadow"}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Source"}),": ",e.jsx("a",{href:"/?path=/docs/components-types-source--docs#37",children:"components/types.ts(ln: 37)"})]}),e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Signature"}),": ",e.jsx("span",{className:"declaration-text",children:"string"})]}),e.jsx(s.hr,{})]})]})}function u(r={}){const{wrapper:s}={...t(),...r.components};return s?e.jsx(s,{...r,children:e.jsx(n,{...r})}):n(r)}export{u as default};
